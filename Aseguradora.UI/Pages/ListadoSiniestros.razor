@page "/listadoSiniestros"
@inject ListarSiniestrosUseCase ListarSiniestrosUseCase
@inject EliminarSiniestroUseCase EliminarSiniestroUseCase
@inject NavigationManager Navegador

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>ID POLIZA</th>
            <th>FECHA INGRESO</th>
            <th>FECHA OCURRENCIA</th>
            <th>DIRECCION</th>
            <th>DESCRIPCION</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var s in _lista)
        {
            <tr>
                <td>@s.Id</td>
                <td>@s.PolizaId</td>
                <td>@s.FechaIngreso</td>
                <td>@s.FechaOcurrencia</td>
                <td>@s.Direccion</td>
                <td>@s.Descripcion</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>ModificarSiniestro(s)">
                        <span class="oi oi-pencil"></span>
                    </button>
                    <button class="btn btn-danger" @onclick="()=>ConfirmarEliminacion(s)">
                        <span class="oi oi-trash"></span>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<DialogoConfirmacion @ref=dialogo/>
<DialogoConfirmacion @ref="dialogoEliminar" OnConfirmado="Eliminar" />
@code
{
    List<Siniestro> _lista = new List<Siniestro>();
    DialogoConfirmacion dialogo = null!;
    protected override void OnInitialized()
    {
        try{
            _lista = ListarSiniestrosUseCase.Ejecutar();
        }catch (Exception e){
            dialogo.Mensaje = "Error: " + e.Message;
            dialogo.Mostrar();
        }
    }
    DialogoConfirmacion dialogoEliminar = null!;
    Siniestro? _siniestroParaEliminar = null;
    private void ConfirmarEliminacion(Siniestro s)
    {
        _siniestroParaEliminar = s;
        dialogoEliminar.Mensaje = $"Â¿Desea eliminar el siniestro {s.Id}?";
        dialogoEliminar.Mostrar();
    }
    private void Eliminar()
    {
        try
        {
            if (_siniestroParaEliminar != null)
            {
                EliminarSiniestroUseCase.Ejecutar(_siniestroParaEliminar.Id);
                _lista = ListarSiniestrosUseCase.Ejecutar();
            }
        }
        catch (Exception e){
            dialogo.Mensaje = "Error: " + e.Message;
            dialogo.Mostrar();
        }
    }
    void ModificarSiniestro(Siniestro s)
    {
        Navegador.NavigateTo($"siniestro/{s.Id}");
    }
    
}