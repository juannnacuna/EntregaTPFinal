@page "/vehiculo/{Id:int?}"
@inject ObtenerVehiculoUseCase ObtenerVehiculoUseCase
@inject ModificarVehiculoUseCase ModificarVehiculoUseCase
@inject NavigationManager Navegador;
@inject AgregarVehiculoUseCase AgregarVehiculoUseCase

@if (_esNuevoVehiculo)
{
    <h3>Agregando un nuevo Vehículo</h3>
}
else
{
    <h3>Modificando el Vehículo "@_vehiculo.Id"</h3>
}

<div>
    <span>Dominio:</span>
    <input placeholder="Dominio" @bind="_vehiculo.Dominio" class="form-control">
    <span>Marca:</span>
    <input placeholder="Marca" @bind="_vehiculo.Marca" class="form-control">
    <span>Año:</span>
    <input placeholder="Año" @bind="_vehiculo.Anio" class="form-control">
    <span>Id del Titular:</span>
    <input placeholder="Id Titular" @bind="_vehiculo.TitularId" class="form-control">
    <button class="btn btn-primary" @onclick="Aceptar">Aceptar</button>
</div>

<DialogoConfirmacion @ref=dialogo/>

@code {
    Vehiculo _vehiculo = new Vehiculo();
    DialogoConfirmacion dialogo = null!;
    [Parameter] public int? Id { get; set; }
    bool _esNuevoVehiculo = true;
    protected override void OnParametersSet()
    {
        if (Id != null)
        {
            var v_hallado = ObtenerVehiculoUseCase.Ejecutar(Id.Value);
            if (v_hallado != null)
            {
                _vehiculo = v_hallado;
                _esNuevoVehiculo = false;
            }
        }
    }
    void Aceptar()
    {
        try
        {
            if (_esNuevoVehiculo)
            {
                AgregarVehiculoUseCase.Ejecutar(_vehiculo);
            }
            else
            {
                ModificarVehiculoUseCase.Ejecutar(_vehiculo);
            }
            _vehiculo = new Vehiculo();
            Navegador.NavigateTo("listadoVehiculos");
        }
        catch (Exception e){
            dialogo.Mensaje = "Error: " + e.Message;
            dialogo.Mostrar();
        }
    }
}